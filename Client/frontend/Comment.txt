--> app/page.tsx

  // useEffect(() => {
  //   const queryParams = getQueryParams(window.location.search);
  //   const accessToken = queryParams.accessToken;
  //   console.log('accesstoken ',accessToken , ' end')
  //   if (accessToken) {
  //     fetchUserData(accessToken)
  //     console.log('userId.length === ', userId.length)
  //     if (userId.length != 0)
  //       fetchUserDataById(userId, accessToken);
  //   } else {
  //     setLoading(false);
  //   }
  // }, []);
  // const fetchUserData = async (token: string) => {
  //   try {
  //     const response = await fetch(`http://localhost:3001/api/user/${token}`, {
  //       headers: {
  //         Authorization: `Bearer ${token}`,
  //       },
  //     });

  //     if (!response.ok) {
  //       throw new Error('Failed to fetch user data');
  //     }

  //     const data: any = await response.json();
  //     console.log('data ',data);
  //     setUserId(data.user.id);
  //     console.log('first Fetched User:', data.user.id);
  //   } catch (error) {
  //     console.error('Error fetching user data:', error);
  //   } finally {
  //     setLoading(false);
  //   }
  // };
  // const fetchUserDataById = async (id: string, accessToken: string) => {
  //   try {
  //     console.log('id - frontend:',id)

  //     const response = await fetch(`http://localhost:3001/api/user/id/${id}`, {
  //       headers: {
  //         Authorization: `Bearer ${accessToken}`,
  //       },
  //     });

  //     if (!response.ok) {
  //       throw new Error('Failed to fetch user data by ID');
  //     }
  //     console.log('response', response)
  //     const data: User = await response.json();
  //     console.log('UserObject2 :',data)
  //     setUser(data);
  //     console.log('Fetched User by ID2: -->', data);

  //   } catch (error) {
  //     console.error('Error fetching user data by ID2:', error);
  //   }
  // };
  // useEffect(() => {
  //   console.log('User state updated:2', user);
  // }, [user]);

  // if (loading) {
  //   return <p>Loading...</p>;
  // }